{"ast":null,"code":"var _jsxFileName = \"/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [meals, setMeals] = useState([]); // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const fetchMealsHandler = async () => {\n    _s();\n\n    // have a set is loading\n    setIsLoading(true);\n    setError(null); // has an error set\n\n    const {\n      error,\n      isLoading\n    } = useHttp();\n\n    try {\n      const response = await fetch(\"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\");\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n      console.log(error.message); // This error message isn't saving to the setError ---\n    }\n\n    setIsLoading(false);\n  };\n\n  _s(fetchMealsHandler, \"pig7R+Fc5AeUDlboThhTfsspPBM=\", false, function () {\n    return [useHttp];\n  });\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, []);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this));\n\n  let content = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no meals found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }, this);\n\n  if (mealsList.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(Card, {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AvailableMeals, \"an3554G5PYiaii/PlvHt6YA7hZs=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","classes","Card","MealItem","useHttp","AvailableMeals","meals","setMeals","fetchMealsHandler","setIsLoading","setError","error","isLoading","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","console","log","mealsList","map","meal","content","length"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const fetchMealsHandler = async () => {\n    // have a set is loading\n    setIsLoading(true);\n    setError(null);\n    // has an error set\n    const { error, isLoading, } = useHttp()\n\n    try {\n      const response = await fetch(\n        \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message)\n      setIsLoading(false)\n      console.log(error.message)\n      // This error message isn't saving to the setError ---\n    }\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, []);\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  let content = <Card><p>no meals found...</p></Card>\n\n  if (mealsList.length > 0) {\n    content = <Card>{mealsList}</Card>\n  }\n\n  if (error) {\n    content = <Card><p>Error: {error}</p></Card>\n  }\n\n  if (isLoading) {\n    content = <Card><p>loading...</p></Card>\n  }\n  \n  return (\n    <section className={classes.meals}>\n      <ul>\n        {content}\n      </ul>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}