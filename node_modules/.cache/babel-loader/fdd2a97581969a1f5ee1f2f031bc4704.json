{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst initialState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === 'BLUR') {\n    return {\n      value: state.value,\n      isTouched: true\n    };\n  }\n\n  if (action.type === 'RESET') {\n    return {\n      value: '',\n      isTouched: false\n    };\n  }\n\n  return inputStateReducer;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = () => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    value: inputState.value,\n    hasError,\n    isValid: valueIsValid,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"WTVy3W/BBpinEIavl2C9EMTzZQQ=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/beet/code/udemy/food-order-app/src/hooks/use-input.js"],"names":["useReducer","initialState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAACL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAf;AAAsBC,MAAAA,SAAS,EAAEE,KAAK,CAACF;AAAvC,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC1B,WAAO;AAACL,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAAd;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAACL,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,SAAS,EAAE;AAAvB,KAAP;AACD;;AACD,SAAOC,iBAAP;AACD,CAXD;;AAcA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACI,iBAAD,EAAoBH,YAApB,CAAzC;AAEA,QAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC;AACA,QAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAA7C;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,OAAP;AAAgBL,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAad;AAApC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMe,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMW,KAAK,GAAG,MAAM;AAClBP,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AACLL,IAAAA,KAAK,EAAEQ,UAAU,CAACR,KADb;AAELW,IAAAA,QAFK;AAGLM,IAAAA,OAAO,EAAEP,YAHJ;AAILE,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA1BD;;GAAMV,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from 'react';\n\nconst initialState = {\n  value: '',\n  isTouched: false\n}\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {value: action.value, isTouched: state.isTouched}\n  }\n  if (action.type === 'BLUR') {\n    return {value: state.value, isTouched: true}\n  }\n  if (action.type === 'RESET') {\n    return {value: '', isTouched: false}\n  }\n  return inputStateReducer;\n};\n\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialState);\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (event) => {\n    dispatch({type: 'INPUT', value: event.target.value});\n  }\n\n  const inputBlurHandler = () => {\n    dispatch({type: 'BLUR'});\n  }\n\n  const reset = () => {\n    dispatch({type: 'RESET'});\n  }\n\n  return {\n    value: inputState.value,\n    hasError,\n    isValid: valueIsValid,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  }\n};\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}