{"ast":null,"code":"var _jsxFileName = \"/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js\";\nimport { useState, useEffect } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99\n}, {\n  id: \"m2\",\n  name: \"Schnitzel\",\n  description: \"A german specialty!\",\n  price: 16.5\n}, {\n  id: \"m3\",\n  name: \"Barbecue Burger\",\n  description: \"American, raw, meaty\",\n  price: 12.99\n}, {\n  id: \"m4\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99\n}];\nconst [meals, setMeals] = useState([]);\n\nconst fetchMealsHandler = () => {\n  // have a set is loading\n  // has an error set\n  // fetch meals from server.\n  const reponse = fetch(\"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\");\n  const data = reponse.json();\n  const loadedMeals = [];\n\n  for (const key in data) {\n    loadedMeals.push({\n      id: key,\n      name: data[key].name,\n      description: data[key].description,\n      price: data[key].price\n    });\n  }\n\n  setMeals(loadedMeals);\n};\n\nuseEffect(() => {\n  fetchMealsHandler();\n}, []);\n\nconst AvailableMeals = () => {\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","classes","Card","MealItem","DUMMY_MEALS","id","name","description","price","meals","setMeals","fetchMealsHandler","reponse","fetch","data","json","loadedMeals","key","push","AvailableMeals","mealsList","map","meal"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,WAAW,EAAE,yBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADkB,EAOlB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,WAAW,EAAE,qBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPkB,EAalB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,WAAW,EAAE,sBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbkB,EAmBlB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnBkB,CAApB;AA2BA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MAAMY,iBAAiB,GAAG,MAAM;AAC9B;AACA;AAEA;AACA,QAAMC,OAAO,GAAIC,KAAK,CACpB,uFADoB,CAAtB;AAIA,QAAMC,IAAI,GAAGF,OAAO,CAACG,IAAR,EAAb;AAEA,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfb,MAAAA,EAAE,EAAEY,GADW;AAEfX,MAAAA,IAAI,EAAEQ,IAAI,CAACG,GAAD,CAAJ,CAAUX,IAFD;AAGfC,MAAAA,WAAW,EAAEO,IAAI,CAACG,GAAD,CAAJ,CAAUV,WAHR;AAIfC,MAAAA,KAAK,EAAEM,IAAI,CAACG,GAAD,CAAJ,CAAUT;AAJF,KAAjB;AAMD;;AAEDE,EAAAA,QAAQ,CAACM,WAAD,CAAR;AACD,CAvBD;;AAyBAhB,SAAS,CAAC,MAAM;AACdW,EAAAA,iBAAiB;AAClB,CAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMQ,cAAc,GAAG,MAAM;AAC3B,QAAMC,SAAS,GAAGhB,WAAW,CAACiB,GAAZ,CAAiBC,IAAD,iBAChC,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACjB,EADX;AAGE,IAAA,IAAI,EAAEiB,IAAI,CAAChB,IAHb;AAIE,IAAA,WAAW,EAAEgB,IAAI,CAACf,WAJpB;AAKE,IAAA,KAAK,EAAEe,IAAI,CAACd;AALd,KAEOc,IAAI,CAACjB,EAFZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEJ,OAAO,CAACQ,KAA5B;AAAA,2BACE;AAAA,6BACE,QAAC,IAAD;AAAA,kBAAOW;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;KAAMD,c;AAoBN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\nconst DUMMY_MEALS = [\n  {\n    id: \"m1\",\n    name: \"Sushi\",\n    description: \"Finest fish and veggies\",\n    price: 22.99,\n  },\n  {\n    id: \"m2\",\n    name: \"Schnitzel\",\n    description: \"A german specialty!\",\n    price: 16.5,\n  },\n  {\n    id: \"m3\",\n    name: \"Barbecue Burger\",\n    description: \"American, raw, meaty\",\n    price: 12.99,\n  },\n  {\n    id: \"m4\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n  },\n];\n\nconst [meals, setMeals] = useState([]);\n\nconst fetchMealsHandler = () => {\n  // have a set is loading\n  // has an error set\n\n  // fetch meals from server.\n  const reponse =  fetch(\n    \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\n  );\n\n  const data = reponse.json();\n\n  const loadedMeals = [];\n\n  for (const key in data) {\n    loadedMeals.push({\n      id: key,\n      name: data[key].name,\n      description: data[key].description,\n      price: data[key].price,\n    });\n  }\n\n  setMeals(loadedMeals);\n}\n\nuseEffect(() => {\n  fetchMealsHandler();\n}, [])\n\nconst AvailableMeals = () => {\n  const mealsList = DUMMY_MEALS.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <ul>\n        <Card>{mealsList}</Card>\n      </ul>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}