{"ast":null,"code":"var _jsxFileName = \"/Users/beet/code/udemy/food-order-app/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const {\n    sendRequest: sendOrderRequest\n  } = useHttp();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSumbit, setDidSubmit] = useState(false);\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `£${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckingOut(true);\n    console.log(cartCtx.items);\n  };\n\n  const sendOrderHandler = async orderData => {\n    setIsSubmitting(true);\n    await sendOrderRequest({\n      url: \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        user: orderData,\n        orderedItems: cartCtx.items\n      }\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [!isCheckingOut && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), hasItems && !isCheckingOut && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isCheckingOut && /*#__PURE__*/_jsxDEV(Checkout, {\n      onSendOrder: sendOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this), !isCheckingOut && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"wGNf1S4yhZa9rbTaXFSx0pLYB2o=\", false, function () {\n  return [useHttp];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/beet/code/udemy/food-order-app/src/components/Cart/Cart.js"],"names":["React","useContext","useState","classes","Modal","CartContext","CartItem","Checkout","useHttp","Cart","props","sendRequest","sendOrderRequest","isSubmitting","setIsSubmitting","didSumbit","setDidSubmit","isCheckingOut","setIsCheckingOut","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","console","log","sendOrderHandler","orderData","url","method","headers","body","user","orderedItems","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst Cart = (props) => {\n  const { sendRequest: sendOrderRequest } = useHttp()\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSumbit, setDidSubmit] = useState(false);\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `£${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const orderHandler = () => {\n    setIsCheckingOut(true);\n    console.log(cartCtx.items);\n  };\n\n  const sendOrderHandler = async (orderData) => {\n    setIsSubmitting(true);\n    await sendOrderRequest({\n      url: \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n      method: 'POST',\n      headers: {\n        \"Content-Type\" : \"application/json\",\n      },\n      body: {\n        user: orderData,\n        orderedItems: cartCtx.items\n      }\n    })\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  }\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          price={item.price}\n          amount={item.amount}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      {!isCheckingOut && (\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n      )}\n      {hasItems && !isCheckingOut && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckingOut && <Checkout onSendOrder={sendOrderHandler} onCancel={props.onClose}/>}\n      {!isCheckingOut && modalActions}\n    </React.Fragment>\n  )\n\n  return (\n    <Modal onClose={props.onClose}>\n\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}