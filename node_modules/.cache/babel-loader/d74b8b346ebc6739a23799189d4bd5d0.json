{"ast":null,"code":"var _jsxFileName = \"/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMealsHandler = useCallback(async () => {\n    // have a set is loading\n    setIsLoading(true);\n    setError(null); // has an error set\n    // fetch meals from server.\n\n    const reponse = await fetch(\"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\");\n    const data = await reponse.json();\n    const loadedMeals = [];\n\n    for (const key in data) {\n      loadedMeals.push({\n        id: key,\n        name: data[key].name,\n        description: data[key].description,\n        price: data[key].price\n      });\n    }\n\n    setMeals(loadedMeals);\n    setIsLoading(false);\n  });\n  useEffect(() => {\n    fetchMealsHandler();\n  }, []);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this));\n\n  const loading = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: !isLoading ? mealsList : loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Lygr36HOeUZO6txGgj2PcMQwgnI=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","classes","Card","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","reponse","fetch","data","json","loadedMeals","key","push","id","name","description","price","mealsList","map","meal","loading"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMa,iBAAiB,GAAGX,WAAW,CAAC,YAAW;AAC/C;AACAQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR,CAH+C,CAI/C;AAEA;;AACA,UAAME,OAAO,GAAG,MAAMC,KAAK,CACzB,uFADyB,CAA3B;AAIA,UAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,QAAAA,EAAE,EAAEF,GADW;AAEfG,QAAAA,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFD;AAGfC,QAAAA,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHR;AAIfC,QAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;AAJF,OAAjB;AAMD;;AAEDhB,IAAAA,QAAQ,CAACU,WAAD,CAAR;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA1BoC,CAArC;AA4BAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMY,SAAS,GAAGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACN,EADX;AAGE,IAAA,IAAI,EAAEM,IAAI,CAACL,IAHb;AAIE,IAAA,WAAW,EAAEK,IAAI,CAACJ,WAJpB;AAKE,IAAA,KAAK,EAAEI,IAAI,CAACH;AALd,KAEOG,IAAI,CAACN,EAFZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;;AAUA,QAAMO,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;;AAEA,sBACE;AAAS,IAAA,SAAS,EAAEzB,OAAO,CAACI,KAA5B;AAAA,2BACE;AAAA,6BACE,QAAC,IAAD;AAAA,kBAAO,CAACE,SAAD,GAAagB,SAAb,GAAyBG;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxDD;;GAAMtB,c;;KAAAA,c;AA0DN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealsHandler = useCallback(async() => {\n    // have a set is loading\n    setIsLoading(true)\n    setError(null)\n    // has an error set\n\n    // fetch meals from server.\n    const reponse = await fetch(\n      \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\n    );\n\n    const data = await reponse.json();\n\n    const loadedMeals = [];\n\n    for (const key in data) {\n      loadedMeals.push({\n        id: key,\n        name: data[key].name,\n        description: data[key].description,\n        price: data[key].price,\n      });\n    }\n\n    setMeals(loadedMeals);\n    setIsLoading(false)\n  });\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, []);\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  const loading = <p>loading...</p>\n\n  return (\n    <section className={classes.meals}>\n      <ul>\n        <Card>{!isLoading ? mealsList : loading}</Card>\n      </ul>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}