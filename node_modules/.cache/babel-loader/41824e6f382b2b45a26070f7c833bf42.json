{"ast":null,"code":"var _jsxFileName = \"/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]); // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const {\n    error,\n    isLoading,\n    sendRequest: fetchMeals\n  } = useHttp();\n\n  const fetchMealsHandler = async () => {\n    // have a set is loading\n    setIsLoading(true);\n    setError(null); // has an error set\n\n    try {\n      const response = await fetch(\"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n      console.log(error.message); // This error message isn't saving to the setError ---\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    // fetchMealsHandler();\n    const transformMeals = mealObject => {\n      const loadedMeals = [];\n\n      for (const mealKey in mealObject) {\n        loadedMeals.push({\n          id: mealKey,\n          name: mealObject[mealKey].name,\n          description: mealObject[mealKey].description,\n          price: mealObject[mealKey].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    };\n\n    fetchMeals({\n      url: \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\n    }, transformMeals);\n  }, [sendMealsRequest]);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this));\n\n  let content = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no meals found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n\n  if (mealsList.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(Card, {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"EiIvsz60cHeAgmgoWZrGvT33Sik=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/beet/code/udemy/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","classes","Card","MealItem","useHttp","AvailableMeals","meals","setMeals","error","isLoading","sendRequest","fetchMeals","fetchMealsHandler","setIsLoading","setError","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","console","log","transformMeals","mealObject","mealKey","url","sendMealsRequest","mealsList","map","meal","content","length"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const { error, isLoading, sendRequest: fetchMeals } = useHttp();\n\n  const fetchMealsHandler = async () => {\n    // have a set is loading\n    setIsLoading(true);\n    setError(null);\n    // has an error set\n\n    try {\n      const response = await fetch(\n        \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n      console.log(error.message);\n      // This error message isn't saving to the setError ---\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    // fetchMealsHandler();\n    const transformMeals = (mealObject) => {\n      const loadedMeals = [];\n\n      for (const mealKey in mealObject) {\n        loadedMeals.push({\n          id: mealKey,\n          name: mealObject[mealKey].name,\n          description: mealObject[mealKey].description,\n          price: mealObject[mealKey].price\n        });\n      }\n      setMeals(loadedMeals);\n    };\n    fetchMeals({\n      url: \"https://react-http-7b544-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\",\n    },\n    transformMeals\n    );\n  }, [sendMealsRequest]);\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  let content = (\n    <Card>\n      <p>no meals found...</p>\n    </Card>\n  );\n\n  if (mealsList.length > 0) {\n    content = <Card>{mealsList}</Card>;\n  }\n\n  if (error) {\n    content = (\n      <Card>\n        <p>Error: {error}</p>\n      </Card>\n    );\n  }\n\n  if (isLoading) {\n    content = (\n      <Card>\n        <p>loading...</p>\n      </Card>\n    );\n  }\n\n  return (\n    <section className={classes.meals}>\n      <ul>{content}</ul>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}